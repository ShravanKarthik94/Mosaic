% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geomsqr.R
\name{geom_draw_sqr}
\alias{geom_draw_sqr}
\title{Display square for a given centroid and edge measure.}
\usage{
geom_draw_sqr(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created
by aes or aes_. If specified and inherit.aes = TRUE
(the default), is combined with the default mapping at
the top level of the plot. You only need to supply
mapping if there isn't a mapping defined for the plot.}

\item{data}{A data frame. If specified, overrides the default
data frame defined at the top level of the plot.}

\item{stat}{The statistical transformation to use on
the data for this layer, as a string.}

\item{position}{Position adjustment, either as a string,
or the result of a call to a position adjustment function.}

\item{na.rm}{FALSE (the default), removes missing values
with a warning. If TRUE silently removes missing values.}

\item{show.legend}{Logical. Should this layer be included in
the legends? NA, the default, includes if any aesthetics are
mapped. FALSE never includes, and TRUE always includes.}

\item{inherit.aes}{If FALSE, overrides the default aesthetics,
rather than combining with them. This is most useful for helper
functions that define both data and aesthetics and shouldn't inherit
behaviour from the default plot specification}

\item{...}{Other arguments passed on to layer. There are three types of arguments you can use here.}
}
\description{
Square geom is displayed on the graph
}
\details{
\code{geom_draw_sqr} uses the center of the tile and its size (\code{x},
\code{y}, \code{edge}).
}
\section{Aesthetics}{

}
\examples{
# Draw squares of varied sizes at aribtary locations
 df = data.frame(x = c(10,20,30,40,50),
                 y = c(50,40,30,20,10),
                 edge = (10,15,20,25,30),
                 type = c("A","B","A","A","B"))
 ggplot(df,aes(x = x,y = y,edge = edge)) + geom_draw_sqr(aes(fill = type))
}

